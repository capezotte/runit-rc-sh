#!/bin/sh

. /usr/lib/rc/functions

# Check local filesystems
fsck_all() {
	local cmdline FORCEFSCK IGNORE_MOUNTED
	set -f
	cmdline=$(cat /proc/cmdline)
	# shellcheck disable=SC2086
	if [ -f /forcefsck ] || in_array forcefsck $cmdline; then
		FORCEFSCK="1"
	elif [ -f /fastboot ] || in_array fastboot $cmdline; then
		return 0
	elif [ -e /run/initramfs/root-fsck ]; then
		IGNORE_MOUNTED="1"
	fi
	set +f
	netfs_prefix_no
	fsck -A -T -M -C"${FSCK_FD}" -a -t "$NETFS,noopts=_netdev" ${IGNORE_MOUNTED:+-M} -- ${FORCEFSCK:+-f}
}

# Single-user login and/or automatic reboot after fsck (if needed)
fsck_reboot() {
	# $1 = exit code returned by fsck
	# Ignore conditions 'FS errors corrected' and 'Cancelled by the user'
	math_check "$(( ($1 | 33) == 33 ))" && return 0
	if match_check "$(( $1 & 2 ))"; then
		echo
		echo "********************** REBOOT REQUIRED *********************"
		echo "*														  *"
		echo "* The system will be rebooted automatically in 15 seconds. *"
		echo "*														  *"
		echo "************************************************************"
		echo
		sleep 15
	else
		echo
		echo "*****************  FILESYSTEM CHECK FAILED  ****************"
		echo "*														  *"
		echo "*  Please repair manually and reboot. Note that the root   *"
		echo "*  file system is currently mounted read-only. To remount  *"
		echo "*  it read-write, type: mount -o remount,rw /			  *"
		echo "*  When you exit the maintenance shell, the system will	*"
		echo "*  reboot automatically.								   *"
		echo "*														  *"
		echo "************************************************************"
		echo
		sulogin -p
	fi
	echo "Automatic reboot in progress..."
	umount -a
	mount -o remount,ro /
	reboot -f
	exit 0
}

do_fsck(){
	if command -vp fsck >/dev/null 2>&1; then
		fsck_all >|"${FSCK_OUT:-/dev/stdout}" 2>|"${FSCK_ERR:-/dev/stdout}"
		fsckret="$?"
	else
		fsckret=0
	fi
	readonly fsckret
	fsck_reboot "$fsckret"
}

kill_all(){
	pkill --inverse -s0,1 -TERM
	sleep 1
	pkill --inverse -s0,1 -KILL
}

case "$1" in
	start)
		stat_busy "Checking filesystems"
		do_fsck
		add_daemon misc
		stat_done
		;;
	stop)
		stat_busy "Running kill-all"
		kill_all
		rm_daemon misc
		stat_done
		;;
	*)
		echo "usage: $0 {start|stop}"
		exit 1
		;;
esac
